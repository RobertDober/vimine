snippet code
	\`\`\`
	    ${1}
	\`\`\`
	${2}
snippet xp
	expect{ ${1} }.${2:to} ${3}
snippet x
	expect( ${1} ).${2:to} ${3}
snippet rcode
	\`\`\`ruby
	    ${1}
	\`\`\`
snippet speccon
	#### Context ${1}
snippet specbef
	\`\`\`ruby :before
	    ${1}
	\`\`\`
	${2}
snippet specexa
	\`\`\`ruby :example
	    ${1}
	\`\`\`
	${2}
	${2}
snippet specinc
	\`\`\`ruby :include
	    ${1}
	\`\`\`
	${2}
snippet literate
	\`\`\`ruby literate
	    ${1}
	\`\`\`
	${2}
snippet icode
	\`${1}\` ${2}
snippet spec
	\`\`\`ruby speculate
	    ${1}
	\`\`\`
	${2}
	\
snippet	pry
	require 'pry'
	binding.pry
snippet ecode
	\`\`\`elixir
	    ${1}
	\`\`\`
	${2}
snippet link
	[${1}](${2:http://})	
snippet -->
	→
snippet ==>
	⇒
snippet <--
	←
snippet <==
	⇐
snippet ok
	✓
snippet OK
	✔
snippet fail	
	✗
snippet FAIL
	✘	
