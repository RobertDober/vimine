local tail_from = require'tools.list'.tail_from
local F = require'tools.functors'

describe("tail_from", function()
  describe("empty", function()
    it("is an id, and function is never called", function()
      assert.are.same({}, tail_from({}, 42))
    end)
  end)
  describe("predicate always false -> whole list", function()
    it("as aforementioned", function()
      assert.are.same({"a", "b", "c"}, tail_from({"a", "b", "c"}, F.const_fn(false)))
    end)
  end)
  describe("predicate hits an element", function()
    local hit_a = F.equals("a")
    local hit_b = F.equals("b")
    it("can include the element", function()
      assert.are.same({"a", "b", "c"}, tail_from({"a", "b", "c"}, hit_a, true))
      assert.are.same({"b", "c"}, tail_from({"a", "b", "c"}, hit_b, true))
    end)
    it("or not", function()
      assert.are.same({"b", "c"}, tail_from({"a", "b", "c"}, hit_a))
      assert.are.same({"c"}, tail_from({"a", "b", "c"}, hit_b))
    end)
  end)
end)
