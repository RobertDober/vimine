local markdown = require('cccomplete.markdown')()
describe("markdown", function()

  describe("nop", function()
    local function it_behaves_like_a_nop(line)
      describe("nop line:" .. line, function()
        local completion = markdown.complete(line)
        it("same lines", function()
          assert.are.same({line}, completion.lines)
        end)
        it("has the correct offset", function()
          assert.is_equal(0, completion.offset)
        end)
        it("has the correct col", function()
          assert.is_equal(999, completion.col)
        end)
      end)
    end

    it_behaves_like_a_nop("")
    it_behaves_like_a_nop("Just a line")
    it_behaves_like_a_nop("# Just a headline")
  end)

   
  describe("rcode", function()
    local function it_behaves_like_an_rcode(line)
      describe("rcode line:" .. line, function()
        local completion = markdown.complete(line)
        it("added rcode lines", function()
          assert.are.same({line, "```rcode", "    ", "```"}, completion.lines)
        end)
        it("has the correct offset", function()
          assert.is_equal(2, completion.offset)
        end)
        it("has the correct col", function()
          assert.is_equal(5, completion.col)
        end)
      end)
    end

    it_behaves_like_an_rcode("And")
    it_behaves_like_an_rcode("And something")
    it_behaves_like_an_rcode("But")
    it_behaves_like_an_rcode("Example: 1")
    it_behaves_like_an_rcode("Given")
    it_behaves_like_an_rcode("However,")
    it_behaves_like_an_rcode("Then")
    it_behaves_like_an_rcode("When it is true")
  end)

end)
